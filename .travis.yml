os: linux
dist: bionic

language: python 
python:
  - 3.8

services:
  - docker

before_install:
  # Decrypt the git_deploy_key.enc key into /tmp/git_deploy_key
  - openssl aes-256-cbc -K $encrypted_22020ed1e95d_key -iv $encrypted_22020ed1e95d_iv -in do_ssh_key.enc -out /tmp/git_deploy_key -d
  # Make sure only the current user can read the private key
  - chmod 600 /tmp/git_deploy_key
  # Create a script to return the passphrase environment variable to ssh-add
  - echo 'echo ${SSH_PASSPHRASE}' > /tmp/askpass && chmod +x /tmp/askpass
  # Start the authentication agent
  - eval "$(ssh-agent -s)"
  # Add the key to the authentication agent
  - DISPLAY=":0.0" SSH_ASKPASS="/tmp/askpass" setsid ssh-add /tmp/git_deploy_key </dev/null


install:
  - docker --version

stages:
  - build_images
  - deploy

jobs:
  include:
    - stage: build_images
      name: "build and push images"
      script:
        - echo "LOGIN"
        - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
        - echo "BUILD"
        - docker build -t $DOCKER_USERNAME/database:latest . -f Database/Dockerfile
        - docker build -t $DOCKER_USERNAME/api:latest . -f Api/Dockerfile
        - docker build -t $DOCKER_USERNAME/web:latest . -f Web/Dockerfile
        - echo "PUSH"
        - docker push $DOCKER_USERNAME/database:latest
        - docker push $DOCKER_USERNAME/api:latest
        - docker push $DOCKER_USERNAME/web:latest
    - stage: deploy
      name: "deploy new version"
      install: skip
      # -o flag to get around "add ip to known hosts prompt"
      script: |
        ssh -o "StrictHostKeyChecking no" ${MT_USER}@${MT_SERVER} \
        "source /root/.bash_profile && \
        cd /vagrant && \
        docker-compose pull && \
        docker-compose up -d && \


